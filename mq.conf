#rabbitmq_peer_discovery_consul
cluster_formation.peer_discovery_backend = consul
cluster_formation.consul.host = consul
cluster_formation.consul.port = 8500
cluster_formation.consul.scheme = http

loopback_users.guest = false
listeners.tcp.default = 5672
management.listener.port = 15672
management.listener.ssl = false
cluster_formation.consul.svc_addr_auto = true
cluster_formation.consul.svc_addr_use_nodename = false

collect_statistics = fine
collect_statistics_interval = 1000

# Go to documentation to choose the mode which fits you the best
cluster_partition_handling = pause_minority

# If relative configuration is used and our docker has low free disk space then it would block cluster
# Setting this to 15MB should be enough to play with rabbit
disk_free_limit.absolute = 15MB

cluster_name = klaster


# If any client is not responsing for 5s then it is considered dead and would receive ECONNRESET
# For eample if you are a poor node developer and locked node only thread for 5s :)
# in seconds
heartbeat = 5

# in ms
# Let's use short value to simulate network issues :)
cluster_keepalive_interval = 1


# We might wish to use debug when starting our work with rabbitMQ...
log.console.level = debug
# ...and make quest able to do much with the service
default_user = guest
default_pass = guest
default_user_tags.administrator = true
default_permissions.configure = .*
default_permissions.read = .*
default_permissions.write = .*

